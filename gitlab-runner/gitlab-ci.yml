stages:
  - test
  - buildDebug
  - buildRelease
  - deploy
  - notify
  
variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS: "4333796"
  ANDROID_APK_DOWNLOAD_PATH: "/var/www/html/supotore_android_dl"
  ANDROID_DEBUG_APK: "android/app/build/outputs/apk/debug/app-debug.apk"
  ANDROID_RELEASE_APK: "android/app/build/outputs/apk/release/app-release.apk"
  ANDROID_DOWNLOAD_URL: "http://localhost:8080/"
  
checkEslint:
  image: matico/react-native-eslint:1.1
  stage: test
  tags:
  - test
  allow_failure: true
  before_script:
  - chmod +x ./scripts/check_eslint.sh
  script:
  - ./scripts/check_eslint.sh
  
# runTest:
#   stage: test
#   script:
#   - echo 'Not implement'

buildDebugApk:
  image: matico/react-native-android:1.1
  stage: buildDebug
  tags:
  - build
  before_script:
  - chmod +x ./scripts/build_android_init.sh
  - chmod +x ./scripts/build_android_debug.sh
  script:
  - . scripts/build_android_debug.sh
  artifacts:
    paths:
    - ${ANDROID_DEBUG_APK}
buildReleaseApk:
  image: matico/react-native-android:1.1
  stage: buildRelease
  tags:
  - build
  before_script:
  - chmod +x ./scripts/build_android_init.sh
  - chmod +x ./scripts/build_android_release.sh
  script:
  - . scripts/build_android_release.sh
  artifacts:
    paths:
    - ${ANDROID_RELEASE_APK}
#   when: manual
deployDownloadLink:
  variables:
    GIT_STRATEGY: none
  tags:
  - deploy
  stage: deploy
  dependencies:
  - buildDebugApk
  - buildReleaseApk
  script:
  - DATE=`date '+%Y-%m-%d-%H-%M-%S'`
  - mv ${ANDROID_DEBUG_APK} ${ANDROID_APK_DOWNLOAD_PATH}/${DATE}-debug.apk
  - mv ${ANDROID_RELEASE_APK} ${ANDROID_APK_DOWNLOAD_PATH}/${DATE}-release.apk
  
buildIOS:
  tags:
  - ios
  stage: buildRelease
  variables:
    PLATFORM: ios
    FILE_TYPE: ipa
    OUTPUT_PATH: ./$CI_PROJECT_NAME
  script:
  - export PACKAGE_NAME=$(node -p -e "require('./package.json').name")
  - cd ios
  - xcodebuild -scheme $PACKAGE_NAME archive -archivePath $PACKAGE_NAME.xcarchive -allowProvisioningUpdates
  - xcodebuild -exportArchive -archivePath ./$PACKAGE_NAME.xcarchive -exportPath . -exportOptionsPlist $PACKAGE_NAME/Info.plist
  artifacts:
    paths:
    - $PACKAGE_NAME.ipa

notifyWhenDone:
  tags:
  - notify
  stage: notify
  dependencies:
  - deployDownloadLink
  allow_failure: true
  before_script:
  - chmod +x ./scripts/notify_slack_when_done.sh
  script:
  - export ANDROID_DOWNLOAD_URL=${ANDROID_DOWNLOAD_URL}
  - export CI_COMMIT_TITLE=${CI_COMMIT_TITLE}
  - . scripts/notify_slack_when_done.sh
